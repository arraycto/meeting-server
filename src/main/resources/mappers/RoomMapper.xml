<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljz.meetingserver.model.dao.RoomMapper">
  <resultMap id="BaseResultMap" type="com.ljz.meetingserver.model.pojo.Room">
    <id column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_address" jdbcType="VARCHAR" property="roomAddress" />
    <result column="is_available" jdbcType="CHAR" property="isAvailable" />
    <result column="appoint_num" jdbcType="INTEGER" property="appointNum" />
  </resultMap>
  <sql id="Base_Column_List">
    room_id, room_address, is_available, appoint_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ljz_meeting_room
    where room_id = #{roomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ljz_meeting_room
    where room_id = #{roomId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljz.meetingserver.model.pojo.Room">
    insert into ljz_meeting_room (room_id, room_address, is_available, 
      appoint_num)
    values (#{roomId,jdbcType=INTEGER}, #{roomAddress,jdbcType=VARCHAR}, #{isAvailable,jdbcType=CHAR}, 
      #{appointNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ljz.meetingserver.model.pojo.Room">
    insert into ljz_meeting_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomAddress != null">
        room_address,
      </if>
      <if test="isAvailable != null">
        is_available,
      </if>
      <if test="appointNum != null">
        appoint_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomAddress != null">
        #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null">
        #{isAvailable,jdbcType=CHAR},
      </if>
      <if test="appointNum != null">
        #{appointNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljz.meetingserver.model.pojo.Room">
    update ljz_meeting_room
    <set>
      <if test="roomAddress != null">
        room_address = #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null">
        is_available = #{isAvailable,jdbcType=CHAR},
      </if>
      <if test="appointNum != null">
        appoint_num = #{appointNum,jdbcType=INTEGER},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljz.meetingserver.model.pojo.Room">
    update ljz_meeting_room
    set room_address = #{roomAddress,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=CHAR},
      appoint_num = #{appointNum,jdbcType=INTEGER}
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.ljz.meetingserver.model.pojo.Room">
    <id column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_address" jdbcType="VARCHAR" property="roomAddress" />
    <result column="is_available" jdbcType="CHAR" property="isAvailable" />
    <result column="appoint_num" jdbcType="INTEGER" property="appointNum" />
  </resultMap>
  <sql id="Base_Column_List">
    room_id, room_address, is_available, appoint_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ljz_meeting_room
    where room_id = #{roomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ljz_meeting_room
    where room_id = #{roomId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljz.meetingserver.model.pojo.Room">
    insert into ljz_meeting_room (room_id, room_address, is_available, 
      appoint_num)
    values (#{roomId,jdbcType=INTEGER}, #{roomAddress,jdbcType=VARCHAR}, #{isAvailable,jdbcType=CHAR}, 
      #{appointNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ljz.meetingserver.model.pojo.Room">
    insert into ljz_meeting_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomAddress != null">
        room_address,
      </if>
      <if test="isAvailable != null">
        is_available,
      </if>
      <if test="appointNum != null">
        appoint_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomAddress != null">
        #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null">
        #{isAvailable,jdbcType=CHAR},
      </if>
      <if test="appointNum != null">
        #{appointNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljz.meetingserver.model.pojo.Room">
    update ljz_meeting_room
    <set>
      <if test="roomAddress != null">
        room_address = #{roomAddress,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null">
        is_available = #{isAvailable,jdbcType=CHAR},
      </if>
      <if test="appointNum != null">
        appoint_num = #{appointNum,jdbcType=INTEGER},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljz.meetingserver.model.pojo.Room">
    update ljz_meeting_room
    set room_address = #{roomAddress,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=CHAR},
      appoint_num = #{appointNum,jdbcType=INTEGER}
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
</mapper>